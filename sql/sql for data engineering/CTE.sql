create table employee(
	id serial primary key,
	name varchar(20) not null,
	salary integer not null
);

insert into employee(name,salary) values
  ('John Doe', 45000),
   ('Jane Smith', 55000),
   ('Bob Johnson', 65000),
   ('Alice Lee', 75000);
   
with high_sal as(
select name, salary from employee where salary>=50000
)
select * from high_sal;


create table books(
	id serial primary key,
	title varchar(255) not null,
	author varchar(255) not null,
	publish_year integer not null
);
insert into books(title,author,publish_year) values
 ('The Catcher in the Rye', 'J.D. Salinger', 1951),
   ('To Kill a Mockingbird', 'Harper Lee', 1960),
   ('1984', 'George Orwell', 1949),
   ('The Great Gatsby', 'F. Scott Fitzgerald', 1925),
   ('The Lord of the Rings', 'J.R.R. Tolkien', 1954),
   ('The Da Vinci Code', 'Dan Brown', 2003);


with books_g2000 as(
select * from books where publish_year>2000
)
select * from books_g2000

create table department(
	id serial primary key,
	name varchar(255)not null
);

insert into department(name) values
('sales'),
('hr'),
('marketing');

create table employee2(
	id serial  primary key,
	name varchar(255) not null,
	department_id integer not null
);

insert into employee2(name,department_id) values
 ('John Doe', 1),
   ('Jane Smith', 2),
   ('Bob Johnson', 1),
   ('Alice Lee', 3);

with emp_dept as(
select employee2.name,department.name as department_name from employee2 join department on department.id=employee2.department_id
)
select * from emp_dept


create table items(
	id serial primary key,
	name varchar(255) not null,
	price integer not null
);

create table sales(
	id serial primary key,
	item_id  integer not null,
	quantity integer not null,
	sale_date date not null
);
INSERT INTO items (name, price) VALUES
  ('Product A', 100),
  ('Product B', 200),
  ('Product C', 300);

INSERT INTO sales (item_id, quantity, sale_date) VALUES
  (1, 10, '2022-01-01'),
  (2, 5, '2022-01-01'),
  (3, 2, '2022-01-01'),
  (1, 20, '2022-02-01'),
  (2, 10, '2022-02-01'),
  (3, 4, '2022-02-01'),
  (1, 30, '2022-03-01'),
  (2, 15, '2022-03-01'),
  (3, 6, '2022-03-01');
  
  select * from sales
  select * from items
--  create a CTE that selects the total number of items sold
-- and the total revenue generated by the store for each month.
  
with item_sold as(
	select extract(month from sale_date) as month,
	sum(quantity)as total_qtn,
	sum(quantity*price) as total_rev
	from sales join items
	on sales.item_id=items.id group by sale_date
),
monthly_items_sold as(
	select 
	extract(month from sale_date) as month,
	sum(quantity) as total_qty_Sold
	from sales group by month
)
	select
	item_sold.month,
	monthly_items_sold.total_qty_sold,
	item_sold.total_rev
	from  monthly_items_sold  join item_sold 
	on item_sold.month=monthly_items_sold.month
	



